{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/components/posts/AddPost.js\";\nimport React, { Component } from \"react\";\nimport ErrorForm from '../error/ErrorForm';\nimport uid from 'uid';\nimport { EMPTY_FORM, PLACEHOLDER_TITLE, PLACEHOLDER_CONTENT, SUBMIT, API_URL, METHODS, CONTENT_TYPE, ADD_POST } from '../../Constants';\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onSubmit = event => {\n      event.preventDefault();\n      const title = this.title.value;\n      const message = this.body.value;\n      const body = {\n        id: uid(),\n        title,\n        body: message\n      };\n\n      if (this.title.value === \"\" || this.body.value === \"\") {\n        return this.setState({\n          error: \"Field is required\"\n        });\n      } else {\n        fetch(\"\\b\".concat(API_URL, \"/posts\"), {\n          method: METHODS.post,\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-type\": CONTENT_TYPE\n          }\n        }).then(response => response.json()).then(json => {\n          return this.props.addArticle(json);\n        });\n      }\n    };\n\n    this.state = {\n      error: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, ADD_POST), React.createElement(\"form\", {\n      onSubmit: event => this._onSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: title => this.title = title,\n      type: \"text\",\n      id: \"title\",\n      placeholder: PLACEHOLDER_TITLE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      ref: body => this.body = body,\n      placeholder: PLACEHOLDER_CONTENT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button button__from\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, SUBMIT), this.state.error === true ? React.createElement(ErrorForm, {\n      errorMessage: EMPTY_FORM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default AddPost;","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/components/posts/AddPost.js"],"names":["React","Component","ErrorForm","uid","EMPTY_FORM","PLACEHOLDER_TITLE","PLACEHOLDER_CONTENT","SUBMIT","API_URL","METHODS","CONTENT_TYPE","ADD_POST","AddPost","constructor","props","_onSubmit","event","preventDefault","title","value","message","body","id","setState","error","fetch","method","post","JSON","stringify","headers","then","response","json","addArticle","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SACEC,UADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,YAPF,EAQEC,QARF,QASO,iBATP;;AAWA,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAC9BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,SAPmB,GAOPC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,KAAK,GAAG,KAAKA,KAAL,CAAWC,KAAzB;AACA,YAAMC,OAAO,GAAG,KAAKC,IAAL,CAAUF,KAA1B;AACA,YAAME,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAEnB,GAAG,EADI;AAEXe,QAAAA,KAFW;AAGXG,QAAAA,IAAI,EAAED;AAHK,OAAb;;AAMA,UAAI,KAAKF,KAAL,CAAWC,KAAX,KAAqB,EAArB,IAA2B,KAAKE,IAAL,CAAUF,KAAV,KAAoB,EAAnD,EAAuD;AACrD,eAAO,KAAKI,QAAL,CAAc;AACnBC,UAAAA,KAAK,EAAE;AADY,SAAd,CAAP;AAGD,OAJD,MAIO;AACLC,QAAAA,KAAK,aAAKjB,OAAL,aAAsB;AACzBkB,UAAAA,MAAM,EAAEjB,OAAO,CAACkB,IADS;AAEzBN,UAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFmB;AAGzBS,UAAAA,OAAO,EAAE;AACP,4BAAgBpB;AADT;AAHgB,SAAtB,CAAL,CAOCqB,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQME,IAAI,IAAI;AACZ,iBAAO,KAAKnB,KAAL,CAAWoB,UAAX,CAAsBD,IAAtB,CAAP;AACD,SAVD;AAWD;AACF,KAlCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AA+BDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKzB,QAAL,CADF,EAEE;AAAM,MAAA,QAAQ,EAAEK,KAAK,IAAI,KAAKD,SAAL,CAAeC,KAAf,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEE,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAD9B;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,WAAW,EAAEb,iBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AACE,MAAA,GAAG,EAAEgB,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAD5B;AAEE,MAAA,WAAW,EAAEf,mBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAWE;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDC,MAAvD,CAXF,EAYG,KAAK4B,KAAL,CAAWX,KAAX,KAAqB,IAArB,GAA4B,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEpB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAqE,IAZxE,CAFF,CADF;AAmBD;;AAzD6B;;AA4D9B,eAAeQ,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ErrorForm from '../error/ErrorForm'\nimport uid from 'uid'\nimport {\n  EMPTY_FORM, \n  PLACEHOLDER_TITLE,\n  PLACEHOLDER_CONTENT,\n  SUBMIT,\n  API_URL, \n  METHODS,\n  CONTENT_TYPE,\n  ADD_POST\n} from '../../Constants'\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false\n    }\n  }\n\n  _onSubmit = event => {\n    event.preventDefault();\n    const title = this.title.value;\n    const message = this.body.value;\n    const body = {\n      id: uid(),\n      title,\n      body: message\n    }\n\n    if (this.title.value === \"\" || this.body.value === \"\") {\n      return this.setState({\n        error: \"Field is required\"\n      });\n    } else {\n      fetch(`\b${API_URL}/posts`, {\n        method: METHODS.post,\n        body: JSON.stringify(body),\n        headers: {\n          \"Content-type\": CONTENT_TYPE\n        }\n      })\n      .then(response => response.json())\n      .then(json => {\n        return this.props.addArticle(json)\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className='form'>\n        <h3>{ADD_POST}</h3>\n        <form onSubmit={event => this._onSubmit(event)}>\n          <input\n            ref={title => (this.title = title)}\n            type=\"text\"\n            id=\"title\"\n            placeholder={PLACEHOLDER_TITLE}\n          />\n          <textarea\n            ref={body => (this.body = body)}\n            placeholder={PLACEHOLDER_CONTENT}\n          />\n          <button className='button button__from' type=\"submit\">{SUBMIT}</button>\n          {this.state.error === true ? <ErrorForm errorMessage={EMPTY_FORM}/> : null}\n        </form>\n      </div>\n    );\n  }\n}\n  \n  export default AddPost;\n  "]},"metadata":{},"sourceType":"module"}