{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/container/Article-list.js\";\nimport React, { Component } from 'react';\nimport ArticleListItem from '../components/Article-list-item';\nimport { API_URL, METHODS, LIMIT } from '../Constants';\nimport AddPost from './AddPost';\n\nclass ArticleList extends Component {\n  constructor(props) {\n    super(props);\n\n    this._addArticle = body => {\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        body: JSON.stringify({\n          body\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => this.setState({\n        data: [...this.state.data, json]\n      }));\n    };\n\n    this.state = {\n      data: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"\".concat(API_URL, \"/posts\").concat(LIMIT));\n      const json = await response.json();\n      this.setState({\n        data: json\n      });\n    } catch (error) {\n      console.log(\"ERROR\" + error);\n    }\n  }\n\n  async handleClick(index) {\n    const data = this.state.data;\n    const response = await fetch(\"\".concat(API_URL, \"/posts/\").concat(index), {\n      method: METHODS.delete\n    });\n\n    if (response.status === 200) {\n      const filterData = data.filter(item => item.id !== index);\n      this.setState({\n        data: filterData\n      });\n    }\n  } // async addArticle(body) {\n  //   try {\n  //     const response = await fetch(`${API_URL}/posts`, {\n  //     method: METHODS.post,\n  //     body: JSON.stringify({\n  //       body\n  //     }),\n  //     headers: {\n  //     \"Content-type\": \"application/json; charset=UTF-8\"\n  //     }\n  //   })\n  //   const json = await response.json()\n  //     this.setState({\n  //       data: [...this.state.data, json]\n  //     })\n  //   } catch (error){\n  //     console.log(\"ERROR: \" + error)\n  //   }\n  // }\n\n\n  render() {\n    if (this.state.data !== []) {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(AddPost, {\n        addArticle: this.addArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"dataList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, console.log(this.state.data), this.state.data.map(el => React.createElement(ArticleListItem, {\n        key: el.id,\n        title: el.title,\n        body: el.body,\n        onClick: () => this.handleClick(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/container/Article-list.js"],"names":["React","Component","ArticleListItem","API_URL","METHODS","LIMIT","AddPost","ArticleList","constructor","props","_addArticle","body","fetch","method","JSON","stringify","headers","then","response","json","setState","data","state","handleClick","bind","componentDidMount","error","console","log","index","delete","status","filterData","filter","item","id","render","addArticle","map","el","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ArticleListItem from '../components/Article-list-item'\n\nimport {API_URL, METHODS, LIMIT} from '../Constants'\nimport AddPost from './AddPost';\n\n\nclass ArticleList extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.state = {\n          data: []\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n\n    async componentDidMount () {\n      try{\n        const response = await fetch (`${API_URL}/posts${LIMIT}`);\n        const json = await response.json();\n        this.setState({data: json})\n      } catch (error){\n        console.log(\"ERROR\" + error)\n      }\n    }\n\n    async handleClick(index) {\n      const { data } = this.state;\n      const response = await fetch(`${API_URL}/posts/${index}` , {\n        method: METHODS.delete\n      });\n      \n      if (response.status === 200) {\n        const filterData = data.filter(item => item.id !== index);\n  \n        this.setState({\n          data: filterData\n        });\n      }\n    }\n\n    // async addArticle(body) {\n    //   try {\n    //     const response = await fetch(`${API_URL}/posts`, {\n    //     method: METHODS.post,\n    //     body: JSON.stringify({\n    //       body\n    //     }),\n    //     headers: {\n    //     \"Content-type\": \"application/json; charset=UTF-8\"\n    //     }\n    //   })\n    //   const json = await response.json()\n    //     this.setState({\n    //       data: [...this.state.data, json]\n    //     })\n    //   } catch (error){\n    //     console.log(\"ERROR: \" + error)\n    //   }\n    // }\n\n    _addArticle = body => {\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    body: JSON.stringify({\n      body\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  })\n  .then(response => response.json())\n  .then(json => this.setState({\n          data: [...this.state.data, json]\n        }))\n\n    }\n  \n\n    render() {\n      \n    if(this.state.data !== []){\n      return (\n        \n        \n        <div className=''>\n          <AddPost addArticle={this.addArticle}/>\n          <ul className='dataList'>\n            {console.log(this.state.data)}\n              {this.state.data.map(el => (\n                  <ArticleListItem \n                    key={el.id} \n                    title={el.title} \n                    body={el.body} \n                    onClick={() => this.handleClick(el.id)}\n                  />\n              ))}\n            </ul>    \n        </div>\n      )\n    }\n  }\n}\n\nexport default ArticleList\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}