{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/components/posts/EditForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ErrorForm from './../error/ErrorForm';\nimport { SUBMIT, EMPTY_FORM, API_URL } from './../../Constants';\nimport { METHODS } from '../../Constants';\n\nclass ArticleList extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onSubmit = event => {\n      console.log('hello');\n      event.preventDefault();\n      const title = this.title.value;\n      const message = this.body.value;\n      const body = {\n        id: this.state.idEdit,\n        title: title,\n        body: message\n      };\n      fetch(\"\\b\".concat(API_URL, \"/posts\"), {\n        method: METHODS.put,\n        body: JSON.stringify(body),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => {\n        console.log('RESPONSE FROM POST : ', json);\n        return this.props.addArticle(json);\n      });\n    };\n\n    this.state = {\n      idEdit: this.props.idEdit\n    };\n  }\n\n  // _onEdit = dataEdit => {\n  //   const { \n  //     history: {\n  //         location: {\n  //           pathname\n  //         }\n  //     }\n  //   } = this.props;\n  //   const idEdit = pathname.split('/')[2];\n  //   dataEdit.preventDefault();\n  //   console.log(idEdit)\n  //   fetch(`${API_URL}/posts/${+idEdit}`, {\n  //   method: METHODS.put,\n  //   body: JSON.stringify({\n  //     id: +idEdit,\n  //     title: this.title.value,\n  //     body: this.body.value,\n  //     userId: 1\n  //   }),\n  //   headers: {\n  //     \"Content-type\": \"application/json; charset=UTF-8\"\n  //   }\n  // })\n  // .then(response => response.json())\n  // .then(json =>  {\n  //   console.log(this.props);\n  //   return this.props.editItem(json)\n  // })\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Modifier un article\"), React.createElement(\"form\", {\n      onSubmit: e => this._onEdit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: title => this.title = title,\n      type: \"text\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      ref: body => this.body = body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button button__from\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, SUBMIT), this.state.error === true ? React.createElement(ErrorForm, {\n      errorMessage: EMPTY_FORM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default withRouter(ArticleList);","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/components/posts/EditForm.js"],"names":["React","Component","withRouter","ErrorForm","SUBMIT","EMPTY_FORM","API_URL","METHODS","ArticleList","constructor","props","_onSubmit","event","console","log","preventDefault","title","value","message","body","id","state","idEdit","fetch","method","put","JSON","stringify","headers","then","response","json","addArticle","render","e","_onEdit","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,OAA5B,QAA0C,mBAA1C;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;AAGA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,SAPkB,GAONC,KAAK,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AACA,YAAMC,KAAK,GAAG,KAAKA,KAAL,CAAWC,KAAzB;AACA,YAAMC,OAAO,GAAG,KAAKC,IAAL,CAAUF,KAA1B;AACA,YAAME,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,MADJ;AAEXN,QAAAA,KAAK,EAAEA,KAFI;AAGXG,QAAAA,IAAI,EAAED;AAHK,OAAb;AAMAK,MAAAA,KAAK,aAAKjB,OAAL,aAAsB;AACzBkB,QAAAA,MAAM,EAAEjB,OAAO,CAACkB,GADS;AAEzBN,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFmB;AAGzBS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHgB,OAAtB,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQME,IAAI,IAAI;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCiB,IAArC;AACA,eAAO,KAAKrB,KAAL,CAAWsB,UAAX,CAAsBD,IAAtB,CAAP;AACD,OAXD;AAYD,KA9BiB;;AAEd,SAAKV,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWY;AADR,KAAb;AAGH;;AA2BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEA;AAAM,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKC,OAAL,CAAaD,CAAb,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACE,MAAA,GAAG,EAAElB,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAD9B;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AACE,MAAA,GAAG,EAAEG,IAAI,IAAK,KAAKA,IAAL,GAAYA,IAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EASI;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDf,MAAvD,CATJ,EAUG,KAAKiB,KAAL,CAAWe,KAAX,KAAqB,IAArB,GAA4B,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE/B,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAqE,IAVxE,CAFA,CADF;AAiBH;;AAjFiC;;AAoFpC,eAAeH,UAAU,CAACM,WAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport { withRouter } from 'react-router-dom'\nimport ErrorForm from './../error/ErrorForm'\nimport {SUBMIT, EMPTY_FORM, API_URL} from './../../Constants'\nimport {METHODS} from '../../Constants'\n\n\nclass ArticleList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          idEdit: this.props.idEdit\n        };\n    }\n\n    _onSubmit = event => {\n      console.log('hello')\n      event.preventDefault()\n      const title = this.title.value\n      const message = this.body.value\n      const body = {\n        id: this.state.idEdit,\n        title: title,\n        body: message\n      }\n\n      fetch(`\b${API_URL}/posts`, {\n        method: METHODS.put,\n        body: JSON.stringify(body),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      })\n      .then(response => response.json())\n      .then(json => {\n        console.log('RESPONSE FROM POST : ', json);\n        return this.props.addArticle(json)\n      });\n    }\n\n    // _onEdit = dataEdit => {\n    //   const { \n    //     history: {\n    //         location: {\n    //           pathname\n    //         }\n    //     }\n    //   } = this.props;\n    //   const idEdit = pathname.split('/')[2];\n    //   dataEdit.preventDefault();\n    //   console.log(idEdit)\n    //   fetch(`${API_URL}/posts/${+idEdit}`, {\n    //   method: METHODS.put,\n    //   body: JSON.stringify({\n    //     id: +idEdit,\n    //     title: this.title.value,\n    //     body: this.body.value,\n    //     userId: 1\n    //   }),\n    //   headers: {\n    //     \"Content-type\": \"application/json; charset=UTF-8\"\n    //   }\n    // })\n    // .then(response => response.json())\n    // .then(json =>  {\n    //   console.log(this.props);\n    //   return this.props.editItem(json)\n    // })\n    // }\n\n    render() {\n      return (\n        <div className='addForm'>\n        <h3>Modifier un article</h3>\n        <form onSubmit={e => this._onEdit(e)}>\n            <input\n              ref={title => (this.title = title)}\n              type=\"text\"\n              id=\"title\"\n            />\n            <textarea\n              ref={body => (this.body = body)}\n            />\n            <button className='button button__from' type=\"submit\">{SUBMIT}</button>\n          {this.state.error === true ? <ErrorForm errorMessage={EMPTY_FORM}/> : null}\n        </form>\n      </div>\n      )\n  }\n}\n\nexport default withRouter(ArticleList);\n"]},"metadata":{},"sourceType":"module"}