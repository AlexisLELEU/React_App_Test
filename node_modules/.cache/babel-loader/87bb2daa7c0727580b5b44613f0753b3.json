{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/components/posts/Article-list.js\";\nimport React, { Component } from 'react';\nimport ArticleListItem from './Article-list-item';\nimport Loader from '../loader/loader';\nimport AddPost from './AddPost';\nimport UpdatePost from './UpdatePost';\nimport { API_URL, METHODS, LIMIT } from '../../Constants';\n\nclass ArticleList extends Component {\n  constructor(props) {\n    super(props);\n\n    this._addArticle = tab => {\n      this.setState({\n        loader: true\n      });\n      fetch(\"\\b\".concat(API_URL, \"/posts\"), {\n        method: 'POST',\n        body: JSON.stringify({\n          userId: 1,\n          title: tab.title,\n          body: tab.body\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => this.setState({\n        data: [...this.state.data, json],\n        loader: false\n      }));\n    };\n\n    this._updateForm = id => {\n      console.log(id);\n    };\n\n    this.state = {\n      data: [],\n      loader: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loader: true\n    });\n\n    try {\n      const response = await fetch(\"\".concat(API_URL, \"/posts\").concat(LIMIT));\n      const json = await response.json();\n      this.setState({\n        data: json,\n        loader: false\n      });\n    } catch (error) {\n      console.log(\"ERROR\" + error);\n    }\n  }\n\n  async handleClick(index) {\n    const data = this.state.data;\n    const response = await fetch(\"\".concat(API_URL, \"/posts/\").concat(index), {\n      method: METHODS.delete\n    });\n\n    if (response.status === 200) {\n      const filterData = data.filter(item => item.id !== index);\n      this.setState({\n        data: filterData\n      });\n    }\n  } // async _addArticle(body) {\n  //   try {\n  //     const response = await fetch(`${API_URL}/posts`, {\n  //     method: METHODS.post,\n  //     body: JSON.stringify({\n  //       userId: 1,\n  //       title: body.title,\n  //       body: body.body\n  //     }),\n  //     headers: {\n  //     \"Content-type\": \"application/json; charset=UTF-8\"\n  //     }\n  //   })\n  //   const json = await response.json()\n  //     this.setState({\n  //       data: [...this.state.data, json]\n  //     })\n  //   } catch (error){\n  //     console.log(\"ERROR: \" + error)\n  //   }\n  // }\n\n\n  render() {\n    if (this.state.loader) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.data !== []) {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(AddPost, {\n        addArticle: this._addArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"dataList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, console.log(this.state.data), this.state.data.reverse().map(el => React.createElement(ArticleListItem, {\n        key: el.id,\n        title: el.title,\n        body: el.body,\n        onClick: () => this.handleClick(el.id),\n        onUpdate: () => this._updateForm(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/components/posts/Article-list.js"],"names":["React","Component","ArticleListItem","Loader","AddPost","UpdatePost","API_URL","METHODS","LIMIT","ArticleList","constructor","props","_addArticle","tab","setState","loader","fetch","method","body","JSON","stringify","userId","title","headers","then","response","json","data","state","_updateForm","id","console","log","handleClick","bind","componentDidMount","error","index","delete","status","filterData","filter","item","render","reverse","map","el"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ArticleListItem from './Article-list-item'\nimport Loader from '../loader/loader';\nimport AddPost from './AddPost';\nimport UpdatePost from './UpdatePost'\nimport {API_URL, METHODS, LIMIT} from '../../Constants'\n\n\nclass ArticleList extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.state = {\n          data: [],\n          loader: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n\n    async componentDidMount () {\n      this.setState({\n        loader: true\n      })\n      try{\n        const response = await fetch (`${API_URL}/posts${LIMIT}`);\n        const json = await response.json();\n        this.setState({\n          data: json,\n          loader: false\n        })\n      } catch (error){\n        console.log(\"ERROR\" + error)\n      }\n    }\n\n    async handleClick(index) {\n      const { data } = this.state;\n      const response = await fetch(`${API_URL}/posts/${index}` , {\n        method: METHODS.delete\n      });\n      \n      if (response.status === 200) {\n        const filterData = data.filter(item => item.id !== index);\n  \n        this.setState({\n          data: filterData\n        });\n      }\n    }\n\n    // async _addArticle(body) {\n    //   try {\n    //     const response = await fetch(`${API_URL}/posts`, {\n    //     method: METHODS.post,\n    //     body: JSON.stringify({\n    //       userId: 1,\n    //       title: body.title,\n    //       body: body.body\n    //     }),\n    //     headers: {\n    //     \"Content-type\": \"application/json; charset=UTF-8\"\n    //     }\n    //   })\n    //   const json = await response.json()\n    //     this.setState({\n    //       data: [...this.state.data, json]\n    //     })\n    //   } catch (error){\n    //     console.log(\"ERROR: \" + error)\n    //   }\n    // }\n\n    _addArticle = tab => {\n      this.setState({\n        loader: true\n      });\n      fetch(`\b${API_URL}/posts`, {\n        method: 'POST',\n        body: JSON.stringify({\n          userId: 1,\n          title: tab.title,\n          body: tab.body\n        }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n      })\n      .then(response => response.json())\n      .then(json => this.setState({\n        data: [...this.state.data, json],\n        loader: false\n      }))\n    }\n\n    _updateForm = id =>{\n      console.log(id)\n    }\n\n    render() {\n      if (this.state.loader) {\n        return <Loader />;\n      }   \n      if(this.state.data !== []){\n        return (\n        <div className=''>\n          <AddPost addArticle={this._addArticle}/>\n          <ul className='dataList'>\n            {console.log(this.state.data)}\n              {this.state.data.reverse().map(el => (\n                  <ArticleListItem \n                    key={el.id} \n                    title={el.title} \n                    body={el.body} \n                    onClick={() => this.handleClick(el.id)}\n                    onUpdate={() => this._updateForm(el.id)}\n                  />\n              ))}\n            </ul>    \n        </div>\n      )\n    }\n  }\n}\n\nexport default ArticleList\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}