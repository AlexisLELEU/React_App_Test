{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/container/Photo-List.js\";\nimport React, { Component } from 'react';\nimport PhotoListItems from '../components/Photo-list-items';\nimport { API_URL, LIMIT, METHODS } from '../Constants';\n\nclass PhotoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(index) {\n    const data = this.state.data;\n    const response = await fetch(\"\".concat(API_URL, \"/photos/\").concat(index), {\n      method: METHODS.delete\n    });\n\n    if (response.status === 200) {\n      const filterData = data.filter(item => item.id !== index);\n      this.setState({\n        data: filterData\n      });\n    }\n  }\n\n  addArticle() {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: METHODS.post,\n      body: JSON.stringify({\n        title: 'foo',\n        body: 'bar',\n        userId: 1\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => console.log(json));\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"\".concat(API_URL, \"/photos\").concat(LIMIT));\n      const json = await response.json();\n      this.setState({\n        data: json\n      });\n    } catch (error) {\n      console.log(\"ERROR\" + error);\n    }\n  }\n\n  render() {\n    if (this.state.data !== []) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.addArticle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"test\"), this.state.data.map(el => React.createElement(PhotoListItems, {\n        key: el.id,\n        title: el.title,\n        url: el.url,\n        onClick: () => this.handleClick(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default PhotoList;","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/container/Photo-List.js"],"names":["React","Component","PhotoListItems","API_URL","LIMIT","METHODS","PhotoList","constructor","props","state","data","handleClick","bind","index","response","fetch","method","delete","status","filterData","filter","item","id","setState","addArticle","post","body","JSON","stringify","title","userId","headers","then","json","console","log","componentDidMount","error","render","map","el","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAsC,cAAtC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAED,QAAMD,WAAN,CAAkBE,KAAlB,EAAyB;AAAA,UACbH,IADa,GACJ,KAAKD,KADD,CACbC,IADa;AAErB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,OAAJ,qBAAsBU,KAAtB,GAAgC;AAC1DG,MAAAA,MAAM,EAAEX,OAAO,CAACY;AAD0C,KAAhC,CAA5B;;AAIA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,UAAU,GAAGT,IAAI,CAACU,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,KAAhC,CAAnB;AAEA,WAAKU,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAES;AADM,OAAd;AAGD;AACF;;AAEHK,EAAAA,UAAU,GAAG;AACXT,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,MAAAA,MAAM,EAAEX,OAAO,CAACoB,IADkC;AAElDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,QAAAA,KAAK,EAAE,KADc;AAErBH,QAAAA,IAAI,EAAE,KAFe;AAGrBI,QAAAA,MAAM,EAAE;AAHa,OAAf,CAF4C;AAOpDC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAP2C,KAA/C,CAAL,CAWDC,IAXC,CAWIlB,QAAQ,IAAIA,QAAQ,CAACmB,IAAT,EAXhB,EAYDD,IAZC,CAYIC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAZZ;AAaD;;AAED,QAAMG,iBAAN,GAA2B;AACvB,QAAG;AACD,YAAMtB,QAAQ,GAAG,MAAMC,KAAK,WAAKZ,OAAL,oBAAsBC,KAAtB,EAA5B;AACA,YAAM6B,IAAI,GAAG,MAAMnB,QAAQ,CAACmB,IAAT,EAAnB;AACA,WAAKV,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAEuB;AAAP,OAAd;AACD,KAJD,CAIE,OAAOI,KAAP,EAAa;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUE,KAAtB;AACD;AACF;;AAEHC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAK7B,KAAL,CAAWC,IAAX,KAAoB,EAAvB,EAA0B;AACtB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKc,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEI,KAAKf,KAAL,CAAWC,IAAX,CAAgB6B,GAAhB,CAAoBC,EAAE,IACnB,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAEA,EAAE,CAAClB,EAAxB;AAA4B,QAAA,KAAK,EAAEkB,EAAE,CAACX,KAAtC;AAA6C,QAAA,GAAG,EAAEW,EAAE,CAACC,GAArD;AAA0D,QAAA,OAAO,EAAE,MAAM,KAAK9B,WAAL,CAAiB6B,EAAE,CAAClB,EAApB,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAFJ,CADJ;AAQH;AACJ;;AA9D6B;;AAiElC,eAAehB,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport PhotoListItems from '../components/Photo-list-items'\nimport {API_URL, LIMIT, METHODS} from '../Constants'\n\nclass PhotoList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data: []\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    async handleClick(index) {\n        const { data } = this.state;\n        const response = await fetch(`${API_URL}/photos/${index}` , {\n          method: METHODS.delete\n        });\n        \n        if (response.status === 200) {\n          const filterData = data.filter(item => item.id !== index);\n    \n          this.setState({\n            data: filterData\n          });\n        }\n      }\n\n    addArticle() {\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: METHODS.post,\n        body: JSON.stringify({\n        title: 'foo',\n        body: 'bar',\n        userId: 1\n      }),\n      headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    .then(response => response.json())\n    .then(json => console.log(json))\n    }\n\n    async componentDidMount () {\n        try{\n          const response = await fetch (`${API_URL}/photos${LIMIT}`);\n          const json = await response.json();\n          this.setState({data: json})\n        } catch (error){\n          console.log(\"ERROR\" + error)\n        }\n      }\n\n    render(){\n        if(this.state.data !== []){\n            return (\n                <div>\n                  <button onClick={() => this.addArticle()}>test</button>\n                   {this.state.data.map(el => (\n                       <PhotoListItems key={el.id} title={el.title} url={el.url} onClick={() => this.handleClick(el.id)}/>\n                   ))}\n                </div>\n              )\n        }\n    }\n} \n\nexport default PhotoList"]},"metadata":{},"sourceType":"module"}