{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/components/photo/Photo-List.js\";\nimport React, { Component } from 'react';\nimport PhotoListItems from './Photo-list-items';\nimport { API_URL, LIMIT, METHODS } from '../../Constants';\n\nclass PhotoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(index) {\n    const data = this.state.data;\n    const response = await fetch(\"\".concat(API_URL, \"/photos/\").concat(index), {\n      method: METHODS.delete\n    });\n\n    if (response.status === 200) {\n      const filterData = data.filter(item => item.id !== index);\n      this.setState({\n        data: filterData\n      });\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"\".concat(API_URL, \"/photos\").concat(LIMIT));\n      const json = await response.json();\n      this.setState({\n        data: json\n      });\n    } catch (error) {\n      console.log(\"ERROR\" + error);\n    }\n  }\n\n  render() {\n    if (this.state.data !== []) {\n      return React.createElement(\"ul\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.data.map(el => React.createElement(PhotoListItems, {\n        key: el.id,\n        title: el.title,\n        url: el.url,\n        onClick: () => this.handleClick(el.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default PhotoList;","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/components/photo/Photo-List.js"],"names":["React","Component","PhotoListItems","API_URL","LIMIT","METHODS","PhotoList","constructor","props","state","data","handleClick","bind","index","response","fetch","method","delete","status","filterData","filter","item","id","setState","componentDidMount","json","error","console","log","render","map","el","title","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAsC,iBAAtC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAED,QAAMD,WAAN,CAAkBE,KAAlB,EAAyB;AAAA,UACbH,IADa,GACJ,KAAKD,KADD,CACbC,IADa;AAErB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,OAAJ,qBAAsBU,KAAtB,GAAgC;AAC1DG,MAAAA,MAAM,EAAEX,OAAO,CAACY;AAD0C,KAAhC,CAA5B;;AAIA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,UAAU,GAAGT,IAAI,CAACU,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,KAAhC,CAAnB;AAEA,WAAKU,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAES;AADM,OAAd;AAGD;AACF;;AAEH,QAAMK,iBAAN,GAA2B;AACvB,QAAG;AACD,YAAMV,QAAQ,GAAG,MAAMC,KAAK,WAAKZ,OAAL,oBAAsBC,KAAtB,EAA5B;AACA,YAAMqB,IAAI,GAAG,MAAMX,QAAQ,CAACW,IAAT,EAAnB;AACA,WAAKF,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAEe;AAAP,OAAd;AACD,KAJD,CAIE,OAAOC,KAAP,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,KAAtB;AACD;AACF;;AAEHG,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKpB,KAAL,CAAWC,IAAX,KAAoB,EAAvB,EAA0B;AACtB,aACI;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKD,KAAL,CAAWC,IAAX,CAAgBoB,GAAhB,CAAoBC,EAAE,IACpB,oBAAC,cAAD;AACE,QAAA,GAAG,EAAEA,EAAE,CAACT,EADV;AAEE,QAAA,KAAK,EAAES,EAAE,CAACC,KAFZ;AAGE,QAAA,GAAG,EAAED,EAAE,CAACE,GAHV;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKtB,WAAL,CAAiBoB,EAAE,CAACT,EAApB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ,CADJ;AAWH;AACJ;;AAjD6B;;AAoDlC,eAAehB,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport PhotoListItems from './Photo-list-items'\nimport {API_URL, LIMIT, METHODS} from '../../Constants'\n\nclass PhotoList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data: []\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    async handleClick(index) {\n        const { data } = this.state;\n        const response = await fetch(`${API_URL}/photos/${index}` , {\n          method: METHODS.delete\n        });\n        \n        if (response.status === 200) {\n          const filterData = data.filter(item => item.id !== index);\n    \n          this.setState({\n            data: filterData\n          });\n        }\n      }\n\n    async componentDidMount () {\n        try{\n          const response = await fetch (`${API_URL}/photos${LIMIT}`);\n          const json = await response.json();\n          this.setState({data: json})\n        } catch (error){\n          console.log(\"ERROR\" + error)\n        }\n      }\n\n    render(){\n        if(this.state.data !== []){\n            return (\n                <ul className=''>\n                   {this.state.data.map(el => (\n                      <PhotoListItems \n                        key={el.id} \n                        title={el.title} \n                        url={el.url} \n                        onClick={() => this.handleClick(el.id)}/>\n                   ))}\n                </ul>\n              )\n        }\n    }\n} \n\nexport default PhotoList"]},"metadata":{},"sourceType":"module"}