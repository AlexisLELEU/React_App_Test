{"ast":null,"code":"import _objectSpread from \"/Users/alexis/Desktop/React_App_Test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexis/Desktop/React_App_Test/src/container/Article-list.js\";\nimport React, { Component } from 'react';\nimport ArticleListItem from '../components/Article-list-item';\nimport { API_URL, METHODS, LIMIT } from '../Constants';\n\nclass ArticleList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(index) {\n    const data = this.state.data;\n    const response = await fetch(\"\".concat(API_URL, \"/posts/\").concat(index), {\n      method: METHODS.delete\n    });\n\n    if (response.status === 200) {\n      const filterData = data.filter(item => item.id !== index);\n      this.setState({\n        data: filterData\n      });\n    }\n  }\n\n  addArticle() {\n    fetch(\"\".concat(API_URL, \"/posts\"), {\n      method: METHODS.post,\n      body: JSON.stringify({\n        title: 'MASSSSSHHHAAAAALLLLAAAAAAA',\n        body: 'YOLLLLOOOOOOOO',\n        userId: 1\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => this.setState(prev => ({\n      data: _objectSpread({}, prev.data, {\n        'test': json\n      })\n    })));\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"\".concat(API_URL, \"/posts\"));\n      const json = await response.json();\n      this.setState({\n        data: json\n      });\n    } catch (error) {\n      console.log(\"ERROR\" + error);\n    }\n  }\n\n  render() {\n    if (this.state.data !== []) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.addArticle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"test\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, console.log(this.state.data)));\n    }\n  }\n\n}\n\nexport default ArticleList;","map":{"version":3,"sources":["/Users/alexis/Desktop/React_App_Test/src/container/Article-list.js"],"names":["React","Component","ArticleListItem","API_URL","METHODS","LIMIT","ArticleList","constructor","props","state","data","handleClick","bind","index","response","fetch","method","delete","status","filterData","filter","item","id","setState","addArticle","post","body","JSON","stringify","title","userId","headers","then","json","prev","componentDidMount","error","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAsC,cAAtC;;AAGA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAGhCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAED,QAAMD,WAAN,CAAkBE,KAAlB,EAAyB;AAAA,UACfH,IADe,GACN,KAAKD,KADC,CACfC,IADe;AAEvB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,OAAJ,oBAAqBU,KAArB,GAA+B;AACzDG,MAAAA,MAAM,EAAEZ,OAAO,CAACa;AADyC,KAA/B,CAA5B;;AAIA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,UAAU,GAAGT,IAAI,CAACU,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,KAAhC,CAAnB;AAEA,WAAKU,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAES;AADM,OAAd;AAGD;AACF;;AAEDK,EAAAA,UAAU,GAAG;AACXT,IAAAA,KAAK,WAAIZ,OAAJ,aAAqB;AACxBa,MAAAA,MAAM,EAAEZ,OAAO,CAACqB,IADQ;AAExBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,QAAAA,KAAK,EAAE,4BADc;AAErBH,QAAAA,IAAI,EAAE,gBAFe;AAGrBI,QAAAA,MAAM,EAAE;AAHa,OAAf,CAFkB;AAO1BC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAPiB,KAArB,CAAL,CAWDC,IAXC,CAWIlB,QAAQ,IAAIA,QAAQ,CAACmB,IAAT,EAXhB,EAYDD,IAZC,CAYIC,IAAI,IAAI,KAAKV,QAAL,CAAcW,IAAI,KAAK;AACnCxB,MAAAA,IAAI,oBACCwB,IAAI,CAACxB,IADN,EACe;AAAC,gBAAQuB;AAAT,OADf;AAD+B,KAAL,CAAlB,CAZZ;AAiBD;;AAED,QAAME,iBAAN,GAA2B;AACzB,QAAG;AACD,YAAMrB,QAAQ,GAAG,MAAMC,KAAK,WAAKZ,OAAL,YAA5B;AACA,YAAM8B,IAAI,GAAG,MAAMnB,QAAQ,CAACmB,IAAT,EAAnB;AACA,WAAKV,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAEuB;AAAP,OAAd;AACD,KAJD,CAIE,OAAOG,KAAP,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,KAAtB;AACD;AACF;;AAGDG,EAAAA,MAAM,GAAG;AAET,QAAG,KAAK9B,KAAL,CAAWC,IAAX,KAAoB,EAAvB,EAA0B;AACxB,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKc,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGa,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAWC,IAAvB,CADH,CAFF,CAFF;AAiBD;AACF;;AA7EiC;;AAgFpC,eAAeJ,WAAf","sourcesContent":["import React, {Component} from 'react'\nimport ArticleListItem from '../components/Article-list-item';\n\nimport {API_URL, METHODS, LIMIT} from '../Constants'\n\n\nclass ArticleList extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.state = {data: []};\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    async handleClick(index) {\n      const { data } = this.state;\n      const response = await fetch(`${API_URL}/posts/${index}` , {\n        method: METHODS.delete\n      });\n      \n      if (response.status === 200) {\n        const filterData = data.filter(item => item.id !== index);\n  \n        this.setState({\n          data: filterData\n        });\n      }\n    }\n\n    addArticle() {\n      fetch(`${API_URL}/posts`, {\n        method: METHODS.post,\n        body: JSON.stringify({\n        title: 'MASSSSSHHHAAAAALLLLAAAAAAA',\n        body: 'YOLLLLOOOOOOOO',\n        userId: 1\n      }),\n      headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    .then(response => response.json())\n    .then(json => this.setState(prev => ({\n      data: {\n        ...prev.data, ...{'test': json}\n      }\n    })))\n    }\n\n    async componentDidMount () {\n      try{\n        const response = await fetch (`${API_URL}/posts`);\n        const json = await response.json();\n        this.setState({data: json})\n      } catch (error){\n        console.log(\"ERROR\" + error)\n      }\n    }\n  \n\n    render() {\n      \n    if(this.state.data !== []){\n      return (\n        \n        <div>\n          <button onClick={() => this.addArticle()}>test</button>\n          <ul>\n            {console.log(this.state.data)}\n              {/* {this.state.data.map(el => (\n                  <ArticleListItem \n                    key={el.id} \n                    title={el.title} \n                    body={el.body} \n                    onClick={() => this.handleClick(el.id)}\n                  />\n              ))} */}\n            </ul>    \n        </div>\n      )\n    }\n  }\n}\n\nexport default ArticleList\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}